# Default to x86 optimized core.

ifndef ASM_CORE
    ASM_CORE := 1
endif

ifdef CPU_TYPE
    ifdef CPU_ARCH
        CPU = -mcpu=$(CPU_TYPE) -march=$(CPU_ARCH)
    else
        CPU = -mcpu=$(CPU_TYPE)
    endif
else
    ifdef CPU_ARCH
        CPU = -march=$(CPU_ARCH)
    else
        CPU = -mcpu=i486 -march=pentium2
    endif
endif

CC = gcc
ifndef NASM
    NASM = nasm
endif
RM = rm -f -v

EXEEXT = .exe
OBJEXT = .o

BINARY = fakenes${EXEEXT}
BINARY_DEBUG = fakenesd${EXEEXT}

ifndef DOS_PATHS
    COREOFF = support/coreoff$(EXEEXT)
    COREINC = support/coreoff.inc
else
    COREOFF = support\coreoff$(EXEEXT)
    COREINC = support\coreoff.inc
endif

IFLAGS = -Iinclude/ -Isupport/

NASMDFLAGS = -DC_LABELS_PREFIX=_

ifdef DEBUG
    OFLAGS = -O0 -g -ggdb3
    DFLAGS = -DDEBUG -DUSE_ZLIB -DLSB_FIRST
    NASMFLAGS = ${IFLAGS} -g -f coff ${NASMDFLAGS}
else
    OFLAGS = ${CPU} -O3 -fomit-frame-pointer -fno-rtti -fno-exceptions \
    -funroll-loops -ffast-math -fforce-addr -fforce-mem -fstrength-reduce \
    -fthread-jumps -fexpensive-optimizations -foptimize-sibling-calls \
    -fstrict-aliasing -maccumulate-outgoing-args -fschedule-insns \
    -fschedule-insns2

    DFLAGS = -DUSE_ZLIB -DLSB_FIRST
    NASMFLAGS = ${IFLAGS} -O3 -f coff ${NASMDFLAGS}
endif

ifneq (${ASM_CORE}, 0)
    DFLAGS += -DNO_C_CORE
endif

WFLAGS = -Wall -Wno-unused

CFLAGS = ${IFLAGS} ${OFLAGS} ${WFLAGS} ${DFLAGS}

LIBRARIES = -lalleg -lz

OBJECTS = apu${OBJEXT} audio${OBJEXT} core${OBJEXT} cpu${OBJEXT} \
    data${OBJEXT} gui${OBJEXT} input${OBJEXT} papu${OBJEXT} ppu${OBJEXT} \
    rom${OBJEXT} main${OBJEXT} mmc${OBJEXT} netplay${OBJEXT} \
    video${OBJEXT} crc32${OBJEXT} support/unzip${OBJEXT}

ifneq (${ASM_CORE}, 0)
    OBJECTS += corex86${OBJEXT}
endif

ifdef DEBUG
    all: ${BINARY_DEBUG}
else
    all: ${BINARY}
endif

${BINARY}: ${OBJECTS}
	${CC} ${OBJECTS} -o ${BINARY} -s ${LIBRARIES}

${BINARY_DEBUG}: ${OBJECTS}
	${CC} ${OBJECTS} -o ${BINARY_DEBUG} -g -ggdb3 ${LIBRARIES}

.SUFFIXES: .asm .c

%${OBJEXT}: %.asm
	${NASM} $< -o $@ ${NASMFLAGS}

%${OBJEXT}: %.c
	${CC} -c $< -o $@ ${CFLAGS}

support/coreoff.inc: support/coreoff.c include/core.h include/misc.h
	${CC} $< -o support/coreoff${EXEEXT} ${CFLAGS} -s
	$(COREOFF) > $(COREINC)

include build/common.mk

clean:
	${RM} ${OBJECTS}
	${RM} ${BINARY} ${BINARY_DEBUG}

	${RM} $(COREOFF) $(COREINC)
