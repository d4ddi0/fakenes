# Options.
ASM_CORE ?= @ASM_CORE@

# Tools.
CC = @CC@
NASM ?= @NASM@
MKDIR = @MKDIR@ -p
RMDIR = @RMDIR@
RM = @RM@ -fv
CHMOD = @CHMOD@
INSTALL = @INSTALL@

# Paths.
SOURCE_PATH = .
INCLUDE_PATH = ${SOURCE_PATH}/include
OBJECT_PATH = ${SOURCE_PATH}/build/posix
BINARY_PATH ?= .

# Extensions.
EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@

# Binaries.
BINARY := ${BINARY_PATH}/fakenes${EXEEXT}
COREOFF := ${BINARY_PATH}/coreoff${EXEEXT}
OFFSETS_INC = ${INCLUDE_PATH}/core/x86/offsets.inc

# C compiler flags.
DFLAGS = @DFLAGS@ -DPOSIX
ifneq (${ASM_CORE}, 0)
    DFLAGS += -DNO_C_CORE
endif
CFLAGS := `allegro-config --cflags` -I${INCLUDE_PATH} @CFLAGS@ ${DFLAGS}

# NASM flags.
ifdef DEBUG
    NASMOFLAGS = -g
else
    NASMOFLAGS = -O3
endif
NASMFLAGS := -I${INCLUDE_PATH}/ ${NASMOFLAGS} -f elf -DC_LABELS_PREFIX

# Objects.
OBJECTS := ${OBJECT_PATH}/apu${OBJEXT} \
    ${OBJECT_PATH}/audio${OBJEXT} \
    ${OBJECT_PATH}/core${OBJEXT} \
    ${OBJECT_PATH}/cpu${OBJEXT} \
    ${OBJECT_PATH}/data${OBJEXT} \
    ${OBJECT_PATH}/gui${OBJEXT} \
    ${OBJECT_PATH}/input${OBJEXT} \
    ${OBJECT_PATH}/papu${OBJEXT} \
    ${OBJECT_PATH}/ppu${OBJEXT} \
    ${OBJECT_PATH}/rom${OBJEXT} \
    ${OBJECT_PATH}/main${OBJEXT} \
    ${OBJECT_PATH}/mmc${OBJEXT} \
    ${OBJECT_PATH}/netplay${OBJEXT} \
    ${OBJECT_PATH}/video${OBJEXT} \
    ${OBJECT_PATH}/crc32${OBJEXT} \
    ${OBJECT_PATH}/unzip${OBJEXT}
ifneq (${ASM_CORE}, 0)
    OBJECTS += ${OBJECT_PATH}/corex86${OBJEXT}
endif

# Libraries.
LIBALLEG = `allegro-config --libs`
LIBRARIES = ${LIBALLEG} @LIBRARIES@

.PHONY: all bootstrap install uninstall clean distclean
all: bootstrap ${BINARY}
bootstrap:
	@echo Building.
	${MKDIR} ${OBJECT_PATH}
${BINARY}: bootstrap \
    ${OBJECTS}
	${CC} ${OBJECTS} -o ${BINARY} ${LIBRARIES}
${OFFSETS_INC}: \
    ${SOURCE_PATH}/coreoff.c \
    ${INCLUDE_PATH}/core.h \
    ${INCLUDE_PATH}/misc.h
	${CC} $< -o ${COREOFF} -I${INCLUDE_PATH} -DOUTPUT=\"${OFFSETS_INC}\" ${LIBALLEG}
	${CHMOD} +x ${COREOFF}
	${COREOFF}
	${RM} ${COREOFF}
.SUFFIXES: .asm .c
${OBJECT_PATH}/%${OBJEXT}: \
    %.asm
	${NASM} $< -o $@ ${NASMFLAGS}
${OBJECT_PATH}/%${OBJEXT}: \
    %.c
	${CC} -c $< -o $@ ${CFLAGS}

install: ${BINARY}
	${INSTALL} -m 0755 ${BINARY} /usr/local/bin
	@echo Installed.
	@echo Run \'${BINARY}\' once to create the configuration file.
	@echo It will be stored in \'${HOME}/.fakenes\'.

uninstall:
	${RM} /usr/local/bin/${BINARY}
	@echo Uninstalled.
	@echo \'${HOME}/.fakenes\' must be removed manually.

include build/common.mk

clean:
	${RM} ${OBJECTS} ${BINARY}

distclean: clean
	-${RMDIR} ${OBJECT_PATH}
	${RM} ${COREOFF} ${OFFSETS_INC}
	${RM} Makefile
