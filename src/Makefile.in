# Tools.
CC = @CC@
MKDIR = @MKDIR@ -p
RMDIR = @RMDIR@
RM = @RM@ -fv
CHMOD = @CHMOD@
INSTALL = @INSTALL@

# Paths.
SOURCE_PATH = .
INCLUDE_PATH = ${SOURCE_PATH}/include
OBJECT_PATH = ${SOURCE_PATH}/build/posix
BINARY_PATH ?= .

# Dependancies.
DEPEND ?= ${OBJECT_PATH}/depend.mk

# Extensions.
SRCEXT := .c
EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@

# Binaries.
BINARY := ${BINARY_PATH}/fakenes${EXEEXT}

# C compiler flags.
DFLAGS = @DFLAGS@ -DPOSIX
ifdef TAG
   DFLAGS += -DVERSION_TAG=\"${TAG}\"
endif
CFLAGS := `allegro-config --cflags` -I${INCLUDE_PATH} @CFLAGS@ ${DFLAGS}

# Objects.
OBJECTS := ${OBJECT_PATH}/alstream${OBJEXT} \
   ${OBJECT_PATH}/apu${OBJEXT} \
   ${OBJECT_PATH}/audio${OBJEXT} \
   ${OBJECT_PATH}/core${OBJEXT} \
   ${OBJECT_PATH}/cpu${OBJEXT} \
   ${OBJECT_PATH}/crc${OBJEXT} \
   ${OBJECT_PATH}/data${OBJEXT} \
   ${OBJECT_PATH}/gui${OBJEXT} \
   ${OBJECT_PATH}/hq2x${OBJEXT} \
   ${OBJECT_PATH}/hq3x${OBJEXT} \
   ${OBJECT_PATH}/hq4x${OBJEXT} \
   ${OBJECT_PATH}/input${OBJEXT} \
   ${OBJECT_PATH}/log${OBJEXT} \
   ${OBJECT_PATH}/main${OBJEXT} \
   ${OBJECT_PATH}/mmc${OBJEXT} \
   ${OBJECT_PATH}/net${OBJEXT} \
   ${OBJECT_PATH}/netplay${OBJEXT} \
   ${OBJECT_PATH}/papu${OBJEXT} \
   ${OBJECT_PATH}/ppu${OBJEXT} \
   ${OBJECT_PATH}/rom${OBJEXT} \
   ${OBJECT_PATH}/save${OBJEXT} \
   ${OBJECT_PATH}/unzip${OBJEXT} \
   ${OBJECT_PATH}/video${OBJEXT}

# Libraries.
LIBALLEG = `allegro-config --libs`
LIBRARIES = ${LIBALLEG} @LIBRARIES@

# Dependancies.
-include ${DEPEND}
include build/common.mk

# Targets.
.PHONY: all clean depend distclean install uninstall
all: ${BINARY}
${OBJECT_PATH}:
	${MKDIR} ${OBJECT_PATH}
${DEPEND}: ${OBJECT_PATH}
	@echo Generating dependancy list.
	${CC} -DDEPENDANCIES_ONLY -MM -MG *${SRCEXT} ${CPPFLAGS} > ${DEPEND}
depend: ${DEPEND}
${BINARY}: ${OBJECTS}
	@echo Building.
	${CC} ${OBJECTS} -o ${BINARY} ${LIBRARIES}
.SUFFIXES: .c
${OBJECT_PATH}/%${OBJEXT}: %.c
	${CC} -c $< -o $@ ${CFLAGS}

install: ${BINARY}
	${INSTALL} -m 0755 ${BINARY} /usr/local/bin
	@echo Installed.
	@echo Run \'${BINARY}\' once to create the configuration file.
	@echo It will be stored in \'${HOME}/.fakenes\'.

uninstall:
	${RM} /usr/local/bin/${BINARY}
	@echo Uninstalled.
	@echo \'${HOME}/.fakenes\' must be removed manually.

clean:
	${RM} ${OBJECTS} ${BINARY}

distclean: clean
	${RM} ${DEPEND}
	-${RMDIR} ${OBJECT_PATH}
	${RM} ${COREOFF} ${OFFSETS_INC}
	${RM} Makefile
